Name:        Williams, Cade
Email:       cwil396@lsu.edu
Project:     PA-2 (RAID)
Instructor:  Feng Chen
Class:       cs4103-au21
Login ID:    cs4103ap

To compile:
    gcc raid.c -o raid

To execute:
    NOTE: consecutive runs should use the same number of disks and block size

    To write to disks from input file:
        ./raid <# of disks> <block size in bytes> write <input file name>

        EX: ./raid 4 16 write PA2-sample-input.txt

    To read from disks to output file:
        ./read <# of disks> <block size in bytes> read <output file name>

        EX: ./read 4 16 read output

    To rebuild a disk:
        ./raid <# of disks> <block size in bytes> rebuild <disk file name to rebuild>

        EX: ./raid 4 16 rebuild disk.0
        NOTE: filenames outside of the disk.n, where n is num_of_disks - 1, will not be accepted

Expected output:
    Write:
        Disk file format:
            EX: ./raid 4 16 write PA2-sample-input.txt 
            output:  
                    disk.0               disk.1             disk.2              disk.3

                |--block_size--|
                AAAAAAAAAAAAAAAA    BBBBBBBBBBBBBBBB    CCCCCCCCCCCCCCCC    @@@@@@@@@@@@@@@@<   <Stripe 1>     (< points to parity blocks)
                DDDDDDDDDDDDDDDD    EEEEEEEEEEEEEEEE    GGGGGGGGGGGGGGGG<   FFFFFFFFFFFFFFFF    <Stripe 2>
                GGGGGGGGGGGGGGGG    FFFFFFFFFFFFFFFF<   HHHHHHHHHHHHHHHH    IIIIIIIIIIIIIIII    <Stripe 3>
                MMMMMMMMMMMMMMMM<   JJJJJJJJJJJJJJJJ    KKKKKKKKKKKKKKKK    LLLLLLLLLLLLLLLL        .
                MMMMMMMMMMMMMMMM    NNNNNNNNNNNNNNNN    OOOOOOOOOOOOOOOO    LLLLLLLLLLLLLLLL<       .
                PPPPPPPPPPPPPPPP    QQQQQQQQQQQQQQQQ    SSSSSSSSSSSSSSSS<   RRRRRRRRRRRRRRRR        .
                SSSSSSSSSSSSSSSS    RRRRRRRRRRRRRRRR<   TTTTTTTTTTTTTTTT    UUUUUUUUUUUUUUUU        .
                YYYYYYYYYYYYYYYY<   VVVVVVVVVVVVVVVV    WWWWWWWWWWWWWWWW    XXXXXXXXXXXXXXXX        .
                YYYYYYYYYYYYYYYY    ZZZZZZZZZZZZZZZZ    0000000000000000    3333333333333333<   <Stripe n> 
        
        NOTE: Some characters in the parity blocks may be non-alphanumeric because the XOR operation results in ASCII values
              outside the proper range. 
        NOTE: If performing this operation on an odd number of disks using specifically the PA2-sample-input.txt many parity
              blocks will contain non-alphanumeric values but these values are correct despite not being readable
        NOTE: Parity blocks will start on the last disk of the first stripe, decrement every stripe, and wrap back to the 
              last disk once the parity data has been place in the first disk.

    Read:
        Output file format:

            |--block_size--|
            AAAAAAAAAAAAAAAA
            BBBBBBBBBBBBBBBB
            CCCCCCCCCCCCCCCC
            DDDDDDDDDDDDDDDD
            EEEEEEEEEEEEEEEE
            FFFFFFFFFFFFFFFF
            GGGGGGGGGGGGGGGG
            HHHHHHHHHHHHHHHH
            IIIIIIIIIIIIIIII
            JJJJJJJJJJJJJJJJ
            KKKKKKKKKKKKKKKK
            LLLLLLLLLLLLLLLL
            MMMMMMMMMMMMMMMM
            NNNNNNNNNNNNNNNN
            OOOOOOOOOOOOOOOO
            PPPPPPPPPPPPPPPP
            QQQQQQQQQQQQQQQQ
            RRRRRRRRRRRRRRRR
            SSSSSSSSSSSSSSSS
            TTTTTTTTTTTTTTTT
            UUUUUUUUUUUUUUUU
            VVVVVVVVVVVVVVVV
            WWWWWWWWWWWWWWWW
            XXXXXXXXXXXXXXXX
            YYYYYYYYYYYYYYYY
            ZZZZZZZZZZZZZZZZ
            0000000000000000

            NOTE: This is the output from the provided sample input. The read function will retrieve the data blocks in the 
                  order they were written, excluding the parity information.
    
    Rebuild:
        Rebuilt disk file format: The file format will be the same as that generated by the write function above.

        NOTE: This function can be used to generate a disk file that has been deleted so long as the other member disks are
              accessible.

Expected input:
    Same input format as the PA2-sample-input.txt, meaning a file containing a string of continuous characters with no 
    additional formatting. 



